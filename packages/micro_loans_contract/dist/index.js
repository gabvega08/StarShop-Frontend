import { Buffer } from "buffer";
import { Client as ContractClient, Spec as ContractSpec, } from '@stellar/stellar-sdk/contract';
export * from '@stellar/stellar-sdk';
export * as contract from '@stellar/stellar-sdk/contract';
export * as rpc from '@stellar/stellar-sdk/rpc';
if (typeof window !== 'undefined') {
    //@ts-ignore Buffer exists
    window.Buffer = window.Buffer || Buffer;
}
export const networks = {
    testnet: {
        networkPassphrase: "Test SDF Network ; September 2015",
        contractId: "CASRZ5EIYSNTLJZCIFYKKIKLPQ74XR64N3FBYYRBN6OYC7WPOZFKCPHM",
    }
};
/**
 * Contract error types
 */
export const Errors = {
    1: { message: "NotInitialized" },
    2: { message: "AlreadyInitialized" },
    3: { message: "Unauthorized" },
    4: { message: "DropNotFound" },
    5: { message: "DropNotActive" },
    6: { message: "DropEnded" },
    7: { message: "DropNotStarted" },
    8: { message: "InsufficientSupply" },
    9: { message: "UserLimitExceeded" },
    10: { message: "InvalidQuantity" },
    11: { message: "InvalidTime" },
    12: { message: "InvalidPrice" },
    13: { message: "NotWhitelisted" },
    14: { message: "InsufficientLevel" },
    15: { message: "InvalidUserLevel" },
    16: { message: "PurchaseFailed" },
    17: { message: "DuplicateWhitelistEntry" },
    18: { message: "InvalidStatusTransition" }
};
export class Client extends ContractClient {
    options;
    static async deploy(
    /** Options for initializing a Client as well as for calling a method, with extras specific to deploying. */
    options) {
        return ContractClient.deploy(null, options);
    }
    constructor(options) {
        super(new ContractSpec(["AAAAAgAAAB5TdG9yYWdlIGtleXMgZm9yIGNvbnRyYWN0IGRhdGEAAAAAAAAAAAAHRGF0YUtleQAAAAAIAAAAAAAAAAAAAAAFQWRtaW4AAAAAAAABAAAAAAAAAAREcm9wAAAAAQAAAAQAAAAAAAAAAAAAAAlEcm9wQ291bnQAAAAAAAABAAAAAAAAAA1Vc2VyUHVyY2hhc2VzAAAAAAAAAQAAABMAAAABAAAAAAAAAA1Ecm9wUHVyY2hhc2VzAAAAAAAAAQAAAAQAAAABAAAAAAAAAApEcm9wQnV5ZXJzAAAAAAABAAAABAAAAAAAAAAAAAAACVdoaXRlbGlzdAAAAAAAAAEAAAAAAAAAClVzZXJMZXZlbHMAAAAAAAEAAAAT",
            "AAAAAQAAAB5SZXByZXNlbnRzIGEgbGltaXRlZC10aW1lIGRyb3AAAAAAAAAAAAAERHJvcAAAAAwAAAAAAAAAB2NyZWF0b3IAAAAAEwAAAAAAAAAIZW5kX3RpbWUAAAAGAAAAAAAAAAJpZAAAAAAABAAAAAAAAAAJaW1hZ2VfdXJpAAAAAAAAEAAAAAAAAAAKbWF4X3N1cHBseQAAAAAABAAAAAAAAAAOcGVyX3VzZXJfbGltaXQAAAAAAAQAAAAAAAAABXByaWNlAAAAAAAACwAAAAAAAAAKcHJvZHVjdF9pZAAAAAAABgAAAAAAAAAKc3RhcnRfdGltZQAAAAAABgAAAAAAAAAGc3RhdHVzAAAAAAfQAAAACkRyb3BTdGF0dXMAAAAAAAAAAAAFdGl0bGUAAAAAAAAQAAAAAAAAAA90b3RhbF9wdXJjaGFzZWQAAAAABA==",
            "AAAAAgAAABBTdGF0dXMgb2YgYSBkcm9wAAAAAAAAAApEcm9wU3RhdHVzAAAAAAAEAAAAAAAAAAAAAAAHUGVuZGluZwAAAAAAAAAAAAAAAAZBY3RpdmUAAAAAAAAAAAAAAAAACUNvbXBsZXRlZAAAAAAAAAAAAAAAAAAACUNhbmNlbGxlZAAAAA==",
            "AAAAAQAAABRSZWNvcmQgb2YgYSBwdXJjaGFzZQAAAAAAAAAOUHVyY2hhc2VSZWNvcmQAAAAAAAQAAAAAAAAAB2Ryb3BfaWQAAAAABAAAAAAAAAAKcHJpY2VfcGFpZAAAAAAACwAAAAAAAAAIcXVhbnRpdHkAAAAEAAAAAAAAAAl0aW1lc3RhbXAAAAAAAAAG",
            "AAAAAgAAAB1Vc2VyIGxldmVsIGZvciBhY2Nlc3MgY29udHJvbAAAAAAAAAAAAAAJVXNlckxldmVsAAAAAAAAAwAAAAAAAAAAAAAACFN0YW5kYXJkAAAAAAAAAAAAAAAHUHJlbWl1bQAAAAAAAAAAAAAAAAhWZXJpZmllZA==",
            "AAAABAAAABRDb250cmFjdCBlcnJvciB0eXBlcwAAAAAAAAAFRXJyb3IAAAAAAAASAAAAAAAAAA5Ob3RJbml0aWFsaXplZAAAAAAAAQAAAAAAAAASQWxyZWFkeUluaXRpYWxpemVkAAAAAAACAAAAAAAAAAxVbmF1dGhvcml6ZWQAAAADAAAAAAAAAAxEcm9wTm90Rm91bmQAAAAEAAAAAAAAAA1Ecm9wTm90QWN0aXZlAAAAAAAABQAAAAAAAAAJRHJvcEVuZGVkAAAAAAAABgAAAAAAAAAORHJvcE5vdFN0YXJ0ZWQAAAAAAAcAAAAAAAAAEkluc3VmZmljaWVudFN1cHBseQAAAAAACAAAAAAAAAARVXNlckxpbWl0RXhjZWVkZWQAAAAAAAAJAAAAAAAAAA9JbnZhbGlkUXVhbnRpdHkAAAAACgAAAAAAAAALSW52YWxpZFRpbWUAAAAACwAAAAAAAAAMSW52YWxpZFByaWNlAAAADAAAAAAAAAAOTm90V2hpdGVsaXN0ZWQAAAAAAA0AAAAAAAAAEUluc3VmZmljaWVudExldmVsAAAAAAAADgAAAAAAAAAQSW52YWxpZFVzZXJMZXZlbAAAAA8AAAAAAAAADlB1cmNoYXNlRmFpbGVkAAAAAAAQAAAAAAAAABdEdXBsaWNhdGVXaGl0ZWxpc3RFbnRyeQAAAAARAAAAAAAAABdJbnZhbGlkU3RhdHVzVHJhbnNpdGlvbgAAAAAS",
            "AAAAAAAAACVJbml0aWFsaXplIHRoZSBjb250cmFjdCB3aXRoIGFuIGFkbWluAAAAAAAACmluaXRpYWxpemUAAAAAAAEAAAAAAAAABWFkbWluAAAAAAAAEwAAAAEAAAPpAAAD7QAAAAAAAAAD",
            "AAAAAAAAABFDcmVhdGUgYSBuZXcgZHJvcAAAAAAAAAtjcmVhdGVfZHJvcAAAAAAJAAAAAAAAAAdjcmVhdG9yAAAAABMAAAAAAAAABXRpdGxlAAAAAAAAEAAAAAAAAAAKcHJvZHVjdF9pZAAAAAAABgAAAAAAAAAKbWF4X3N1cHBseQAAAAAABAAAAAAAAAAKc3RhcnRfdGltZQAAAAAABgAAAAAAAAAIZW5kX3RpbWUAAAAGAAAAAAAAAAVwcmljZQAAAAAAAAsAAAAAAAAADnBlcl91c2VyX2xpbWl0AAAAAAAEAAAAAAAAAAlpbWFnZV91cmkAAAAAAAAQAAAAAQAAA+kAAAAEAAAAAw==",
            "AAAAAAAAABRQdXJjaGFzZSBmcm9tIGEgZHJvcAAAAAhwdXJjaGFzZQAAAAMAAAAAAAAABWJ1eWVyAAAAAAAAEwAAAAAAAAAHZHJvcF9pZAAAAAAEAAAAAAAAAAhxdWFudGl0eQAAAAQAAAABAAAD6QAAA+0AAAAAAAAAAw==",
            "AAAAAAAAABBHZXQgZHJvcCBkZXRhaWxzAAAACGdldF9kcm9wAAAAAQAAAAAAAAAHZHJvcF9pZAAAAAAEAAAAAQAAA+kAAAfQAAAABERyb3AAAAAD",
            "AAAAAAAAAB9HZXQgcHVyY2hhc2UgaGlzdG9yeSBmb3IgYSB1c2VyAAAAABRnZXRfcHVyY2hhc2VfaGlzdG9yeQAAAAIAAAAAAAAABHVzZXIAAAATAAAAAAAAAAdkcm9wX2lkAAAAAAQAAAABAAAD6QAAA+oAAAfQAAAADlB1cmNoYXNlUmVjb3JkAAAAAAAD",
            "AAAAAAAAAB5HZXQgdG90YWwgcHVyY2hhc2VzIGZvciBhIGRyb3AAAAAAABJnZXRfZHJvcF9wdXJjaGFzZXMAAAAAAAEAAAAAAAAAB2Ryb3BfaWQAAAAABAAAAAEAAAPpAAAABAAAAAM=",
            "AAAAAAAAABlHZXQgYnV5ZXIgbGlzdCBmb3IgYSBkcm9wAAAAAAAADmdldF9idXllcl9saXN0AAAAAAABAAAAAAAAAAdkcm9wX2lkAAAAAAQAAAABAAAD6QAAA+oAAAATAAAAAw==",
            "AAAAAAAAAChBZGQgYSB1c2VyIHRvIHRoZSB3aGl0ZWxpc3QgKEFkbWluIG9ubHkpAAAAEGFkZF90b193aGl0ZWxpc3QAAAACAAAAAAAAAAVhZG1pbgAAAAAAABMAAAAAAAAABHVzZXIAAAATAAAAAQAAA+kAAAPtAAAAAAAAAAM=",
            "AAAAAAAAAC1SZW1vdmUgYSB1c2VyIGZyb20gdGhlIHdoaXRlbGlzdCAoQWRtaW4gb25seSkAAAAAAAAVcmVtb3ZlX2Zyb21fd2hpdGVsaXN0AAAAAAAAAgAAAAAAAAAFYWRtaW4AAAAAAAATAAAAAAAAAAR1c2VyAAAAEwAAAAEAAAPpAAAD7QAAAAAAAAAD",
            "AAAAAAAAACZTZXQgYSB1c2VyJ3MgYWNjZXNzIGxldmVsIChBZG1pbiBvbmx5KQAAAAAADnNldF91c2VyX2xldmVsAAAAAAADAAAAAAAAAAVhZG1pbgAAAAAAABMAAAAAAAAABHVzZXIAAAATAAAAAAAAAAVsZXZlbAAAAAAAB9AAAAAJVXNlckxldmVsAAAAAAAAAQAAA+kAAAPtAAAAAAAAAAM=",
            "AAAAAAAAAChVcGRhdGUgdGhlIHN0YXR1cyBvZiBhIGRyb3AgKEFkbWluIG9ubHkpAAAADXVwZGF0ZV9zdGF0dXMAAAAAAAADAAAAAAAAAAVhZG1pbgAAAAAAABMAAAAAAAAAB2Ryb3BfaWQAAAAABAAAAAAAAAAGc3RhdHVzAAAAAAfQAAAACkRyb3BTdGF0dXMAAAAAAAEAAAPpAAAD7QAAAAAAAAAD"]), options);
        this.options = options;
    }
    fromJSON = {
        initialize: (this.txFromJSON),
        create_drop: (this.txFromJSON),
        purchase: (this.txFromJSON),
        get_drop: (this.txFromJSON),
        get_purchase_history: (this.txFromJSON),
        get_drop_purchases: (this.txFromJSON),
        get_buyer_list: (this.txFromJSON),
        add_to_whitelist: (this.txFromJSON),
        remove_from_whitelist: (this.txFromJSON),
        set_user_level: (this.txFromJSON),
        update_status: (this.txFromJSON)
    };
}
