import { Buffer } from "buffer";
import { Client as ContractClient, Spec as ContractSpec, } from '@stellar/stellar-sdk/contract';
export * from '@stellar/stellar-sdk';
export * as contract from '@stellar/stellar-sdk/contract';
export * as rpc from '@stellar/stellar-sdk/rpc';
if (typeof window !== 'undefined') {
    //@ts-ignore Buffer exists
    window.Buffer = window.Buffer || Buffer;
}
export const networks = {
    testnet: {
        networkPassphrase: "Test SDF Network ; September 2015",
        contractId: "CC7GNHRY25VXH4TSGPICK6TDD7RY7O5P6T4SML5D626ZRW4NN4ZYDHXJ",
    }
};
/**
 * Loyalty levels with increasing benefits
 */
export var LoyaltyLevel;
(function (LoyaltyLevel) {
    LoyaltyLevel[LoyaltyLevel["Bronze"] = 0] = "Bronze";
    LoyaltyLevel[LoyaltyLevel["Silver"] = 1] = "Silver";
    LoyaltyLevel[LoyaltyLevel["Gold"] = 2] = "Gold";
})(LoyaltyLevel || (LoyaltyLevel = {}));
/**
 * Contract error types
 */
export const Errors = {
    1: { message: "NotInitialized" },
    2: { message: "AlreadyInitialized" },
    3: { message: "Unauthorized" },
    4: { message: "UserNotFound" },
    5: { message: "InsufficientPoints" },
    6: { message: "InvalidAmount" },
    7: { message: "MilestoneNotFound" },
    8: { message: "MilestoneAlreadyCompleted" },
    9: { message: "RewardNotFound" },
    10: { message: "InsufficientLoyaltyLevel" },
    11: { message: "MaxRedemptionExceeded" },
    12: { message: "InvalidPointsExpiry" },
    13: { message: "InvalidLevelRequirements" },
    14: { message: "PointsExpired" },
    15: { message: "ProductNotFound" },
    16: { message: "CategoryNotFound" },
    17: { message: "MilestoneNotEligible" },
    18: { message: "RewardLimitReached" }
};
export class Client extends ContractClient {
    options;
    static async deploy(
    /** Options for initializing a Client as well as for calling a method, with extras specific to deploying. */
    options) {
        return ContractClient.deploy(null, options);
    }
    constructor(options) {
        super(new ContractSpec(["AAAAAwAAACdMb3lhbHR5IGxldmVscyB3aXRoIGluY3JlYXNpbmcgYmVuZWZpdHMAAAAAAAAAAAxMb3lhbHR5TGV2ZWwAAAADAAAAAAAAAAZCcm9uemUAAAAAAAAAAAAAAAAABlNpbHZlcgAAAAAAAQAAAAAAAAAER29sZAAAAAI=",
            "AAAAAgAAABhQb2ludHMgdHJhbnNhY3Rpb24gdHlwZXMAAAAAAAAAD1RyYW5zYWN0aW9uVHlwZQAAAAAEAAAAAAAAAAAAAAAGRWFybmVkAAAAAAAAAAAAAAAAAAVTcGVudAAAAAAAAAAAAAAAAAAAB0V4cGlyZWQAAAAAAAAAAAAAAAAFQm9udXMAAAA=",
            "AAAAAQAAAB1UcmFuc2FjdGlvbiByZWNvcmQgZm9yIHBvaW50cwAAAAAAAAAAAAARUG9pbnRzVHJhbnNhY3Rpb24AAAAAAAAHAAAAAAAAAAZhbW91bnQAAAAAAAsAAAAAAAAACGNhdGVnb3J5AAAD6AAAABEAAAAAAAAAC2Rlc2NyaXB0aW9uAAAAABEAAAAAAAAACmV4cGlyYXRpb24AAAAAAAYAAAAAAAAACnByb2R1Y3RfaWQAAAAAA+gAAAARAAAAAAAAAAl0aW1lc3RhbXAAAAAAAAAGAAAAAAAAABB0cmFuc2FjdGlvbl90eXBlAAAH0AAAAA9UcmFuc2FjdGlvblR5cGUA",
            "AAAAAQAAADRVc2VyIGRhdGEgY29udGFpbmluZyBhbGwgbG95YWx0eS1yZWxhdGVkIGluZm9ybWF0aW9uAAAAAAAAAAhVc2VyRGF0YQAAAAgAAAAAAAAAB2FkZHJlc3MAAAAAEwAAAAAAAAAUY29tcGxldGVkX21pbGVzdG9uZXMAAAPqAAAABAAAAAAAAAAJam9pbl9kYXRlAAAAAAAABgAAAAAAAAAYbGFzdF9hbm5pdmVyc2FyeV9hd2FyZGVkAAAABgAAAAAAAAAFbGV2ZWwAAAAAAAfQAAAADExveWFsdHlMZXZlbAAAAAAAAAAQbGV2ZWxfdXBkYXRlZF9hdAAAAAYAAAAAAAAAD2xpZmV0aW1lX3BvaW50cwAAAAALAAAAAAAAAAx0cmFuc2FjdGlvbnMAAAPqAAAH0AAAABFQb2ludHNUcmFuc2FjdGlvbgAAAA==",
            "AAAAAQAAACpNaWxlc3RvbmUgYWNoaWV2ZW1lbnQgY3JpdGVyaWEgYW5kIHJld2FyZHMAAAAAAAAAAAAJTWlsZXN0b25lAAAAAAAABQAAAAAAAAALZGVzY3JpcHRpb24AAAAAEQAAAAAAAAACaWQAAAAAAAQAAAAAAAAABG5hbWUAAAARAAAAAAAAAA1wb2ludHNfcmV3YXJkAAAAAAAACwAAAAAAAAALcmVxdWlyZW1lbnQAAAAH0AAAABRNaWxlc3RvbmVSZXF1aXJlbWVudA==",
            "AAAAAgAAAClEaWZmZXJlbnQgdHlwZXMgb2YgbWlsZXN0b25lIHJlcXVpcmVtZW50cwAAAAAAAAAAAAAUTWlsZXN0b25lUmVxdWlyZW1lbnQAAAAGAAAAAQAAAAAAAAAOVG90YWxQdXJjaGFzZXMAAAAAAAEAAAAEAAAAAQAAAAAAAAALU3BlbmRBbW91bnQAAAAAAQAAAAsAAAABAAAAAAAAAAxQb2ludHNFYXJuZWQAAAABAAAACwAAAAEAAAAAAAAAD1NwZWNpZmljUHJvZHVjdAAAAAABAAAAEQAAAAEAAAAAAAAAEFNwZWNpZmljQ2F0ZWdvcnkAAAABAAAAEQAAAAEAAAAAAAAACkRheXNBY3RpdmUAAAAAAAEAAAAG",
            "AAAAAQAAACNSZXF1aXJlbWVudHMgZm9yIGVhY2ggbG95YWx0eSBsZXZlbAAAAAAAAAAAEUxldmVsUmVxdWlyZW1lbnRzAAAAAAAAAgAAAAAAAAAEZ29sZAAAB9AAAAANTGV2ZWxDcml0ZXJpYQAAAAAAAAAAAAAGc2lsdmVyAAAAAAfQAAAADUxldmVsQ3JpdGVyaWEAAAA=",
            "AAAAAQAAABtDcml0ZXJpYSBmb3IgbGV2ZWwgdXBncmFkZXMAAAAAAAAAAA1MZXZlbENyaXRlcmlhAAAAAAAAAwAAAAAAAAAPbWluX2RheXNfYWN0aXZlAAAAAAYAAAAAAAAACm1pbl9wb2ludHMAAAAAAAsAAAAAAAAADW1pbl9wdXJjaGFzZXMAAAAAAAAE",
            "AAAAAQAAACxSZXdhcmQgaXRlbSB0aGF0IGNhbiBiZSByZWRlZW1lZCB3aXRoIHBvaW50cwAAAAAAAAAGUmV3YXJkAAAAAAAHAAAAAAAAAAtkZXNjcmlwdGlvbgAAAAARAAAAAAAAAAJpZAAAAAAABAAAAAAAAAAMbWF4X3Blcl91c2VyAAAABAAAAAAAAAAJbWluX2xldmVsAAAAAAAH0AAAAAxMb3lhbHR5TGV2ZWwAAAAAAAAABG5hbWUAAAARAAAAAAAAAAtwb2ludHNfY29zdAAAAAALAAAAAAAAAAtyZXdhcmRfdHlwZQAAAAfQAAAAClJld2FyZFR5cGUAAA==",
            "AAAAAgAAABpUeXBlcyBvZiByZXdhcmRzIGF2YWlsYWJsZQAAAAAAAAAAAApSZXdhcmRUeXBlAAAAAAAEAAAAAQAAAAAAAAAIRGlzY291bnQAAAABAAAABAAAAAEAAAAAAAAAB1Byb2R1Y3QAAAAAAQAAABEAAAABAAAAAAAAAANYTE0AAAAAAQAAAAsAAAABAAAAAAAAAAVUb2tlbgAAAAAAAAIAAAATAAAACw==",
            "AAAAAgAAAB5TdG9yYWdlIGtleXMgZm9yIGNvbnRyYWN0IGRhdGEAAAAAAAAAAAAHRGF0YUtleQAAAAANAAAAAAAAAAAAAAAFQWRtaW4AAAAAAAABAAAAAAAAAARVc2VyAAAAAQAAABMAAAABAAAAAAAAAAlNaWxlc3RvbmUAAAAAAAABAAAABAAAAAEAAAAAAAAABlJld2FyZAAAAAAAAQAAAAQAAAAAAAAAAAAAABFMZXZlbFJlcXVpcmVtZW50cwAAAAAAAAAAAAAAAAAAEFBvaW50c0V4cGlyeURheXMAAAAAAAAAAAAAABdNYXhSZWRlbXB0aW9uUGVyY2VudGFnZQAAAAAAAAAAAAAAABZQb2ludHNQZXJQdXJjaGFzZVJhdGlvAAAAAAABAAAAAAAAABRQcm9kdWN0Q2F0ZWdvcnlCb251cwAAAAEAAAARAAAAAQAAAAAAAAAMUHJvZHVjdEJvbnVzAAAAAQAAABEAAAAAAAAAAAAAAA9Ub3RhbE1pbGVzdG9uZXMAAAAAAAAAAAAAAAAMVG90YWxSZXdhcmRzAAAAAQAAAAAAAAAOVXNlclJlZGVtcHRpb24AAAAAAAEAAAfQAAAADlVzZXJSZWRlbXB0aW9uAAA=",
            "AAAAAQAAADZLZXkgZm9yIHRyYWNraW5nIHVzZXIgcmVkZW1wdGlvbnMgb2YgYSBzcGVjaWZpYyByZXdhcmQAAAAAAAAAAAAOVXNlclJlZGVtcHRpb24AAAAAAAIAAAAAAAAAATAAAAAAAAATAAAAAAAAAAExAAAAAAAABA==",
            "AAAABAAAABRDb250cmFjdCBlcnJvciB0eXBlcwAAAAAAAAAFRXJyb3IAAAAAAAASAAAAAAAAAA5Ob3RJbml0aWFsaXplZAAAAAAAAQAAAAAAAAASQWxyZWFkeUluaXRpYWxpemVkAAAAAAACAAAAAAAAAAxVbmF1dGhvcml6ZWQAAAADAAAAAAAAAAxVc2VyTm90Rm91bmQAAAAEAAAAAAAAABJJbnN1ZmZpY2llbnRQb2ludHMAAAAAAAUAAAAAAAAADUludmFsaWRBbW91bnQAAAAAAAAGAAAAAAAAABFNaWxlc3RvbmVOb3RGb3VuZAAAAAAAAAcAAAAAAAAAGU1pbGVzdG9uZUFscmVhZHlDb21wbGV0ZWQAAAAAAAAIAAAAAAAAAA5SZXdhcmROb3RGb3VuZAAAAAAACQAAAAAAAAAYSW5zdWZmaWNpZW50TG95YWx0eUxldmVsAAAACgAAAAAAAAAVTWF4UmVkZW1wdGlvbkV4Y2VlZGVkAAAAAAAACwAAAAAAAAATSW52YWxpZFBvaW50c0V4cGlyeQAAAAAMAAAAAAAAABhJbnZhbGlkTGV2ZWxSZXF1aXJlbWVudHMAAAANAAAAAAAAAA1Qb2ludHNFeHBpcmVkAAAAAAAADgAAAAAAAAAPUHJvZHVjdE5vdEZvdW5kAAAAAA8AAAAAAAAAEENhdGVnb3J5Tm90Rm91bmQAAAAQAAAAAAAAABRNaWxlc3RvbmVOb3RFbGlnaWJsZQAAABEAAAAAAAAAElJld2FyZExpbWl0UmVhY2hlZAAAAAAAEg==",
            "AAAAAAAAAAAAAAAEaW5pdAAAAAEAAAAAAAAABWFkbWluAAAAAAAAEwAAAAEAAAPpAAAD7QAAAAAAAAAD",
            "AAAAAAAAAAAAAAAMdXBkYXRlX2FkbWluAAAAAQAAAAAAAAAJbmV3X2FkbWluAAAAAAAAEwAAAAEAAAPpAAAD7QAAAAAAAAAD",
            "AAAAAAAAAAAAAAARc2V0X3BvaW50c19leHBpcnkAAAAAAAABAAAAAAAAAARkYXlzAAAABgAAAAEAAAPpAAAD7QAAAAAAAAAD",
            "AAAAAAAAAAAAAAAdc2V0X21heF9yZWRlbXB0aW9uX3BlcmNlbnRhZ2UAAAAAAAABAAAAAAAAAA5wZXJjZW50YWdlX2JwcwAAAAAABAAAAAEAAAPpAAAD7QAAAAAAAAAD",
            "AAAAAAAAAAAAAAAQc2V0X3BvaW50c19yYXRpbwAAAAEAAAAAAAAABXJhdGlvAAAAAAAABAAAAAEAAAPpAAAD7QAAAAAAAAAD",
            "AAAAAAAAAAAAAAASc2V0X2NhdGVnb3J5X2JvbnVzAAAAAAACAAAAAAAAAAhjYXRlZ29yeQAAABEAAAAAAAAACWJvbnVzX2JwcwAAAAAAAAQAAAABAAAD6QAAA+0AAAAAAAAAAw==",
            "AAAAAAAAAAAAAAARc2V0X3Byb2R1Y3RfYm9udXMAAAAAAAACAAAAAAAAAApwcm9kdWN0X2lkAAAAAAARAAAAAAAAAAlib251c19icHMAAAAAAAAEAAAAAQAAA+kAAAPtAAAAAAAAAAM=",
            "AAAAAAAAAAAAAAAKYWRkX3BvaW50cwAAAAAAAwAAAAAAAAAEdXNlcgAAABMAAAAAAAAABmFtb3VudAAAAAAACwAAAAAAAAALZGVzY3JpcHRpb24AAAAAEQAAAAEAAAPpAAAD7QAAAAAAAAAD",
            "AAAAAAAAAAAAAAANcmVnaXN0ZXJfdXNlcgAAAAAAAAEAAAAAAAAABHVzZXIAAAATAAAAAQAAA+kAAAPtAAAAAAAAAAM=",
            "AAAAAAAAAAAAAAASZ2V0X3BvaW50c19iYWxhbmNlAAAAAAABAAAAAAAAAAR1c2VyAAAAEwAAAAEAAAPpAAAACwAAAAM=",
            "AAAAAAAAAAAAAAATZ2V0X2xpZmV0aW1lX3BvaW50cwAAAAABAAAAAAAAAAR1c2VyAAAAEwAAAAEAAAPpAAAACwAAAAM=",
            "AAAAAAAAAAAAAAAWcmVjb3JkX3B1cmNoYXNlX3BvaW50cwAAAAAABAAAAAAAAAAEdXNlcgAAABMAAAAAAAAAD3B1cmNoYXNlX2Ftb3VudAAAAAALAAAAAAAAAApwcm9kdWN0X2lkAAAAAAPoAAAAEQAAAAAAAAAIY2F0ZWdvcnkAAAPoAAAAEQAAAAEAAAPpAAAACwAAAAM=",
            "AAAAAAAAAAAAAAAXaW5pdF9sZXZlbF9yZXF1aXJlbWVudHMAAAAAAQAAAAAAAAAMcmVxdWlyZW1lbnRzAAAH0AAAABFMZXZlbFJlcXVpcmVtZW50cwAAAAAAAAEAAAPpAAAD7QAAAAAAAAAD",
            "AAAAAAAAAAAAAAAWY2hlY2tfYW5kX3VwZGF0ZV9sZXZlbAAAAAAAAQAAAAAAAAAEdXNlcgAAABMAAAABAAAD6QAAAAEAAAAD",
            "AAAAAAAAAAAAAAAOZ2V0X3VzZXJfbGV2ZWwAAAAAAAEAAAAAAAAABHVzZXIAAAATAAAAAQAAA+kAAAfQAAAADExveWFsdHlMZXZlbAAAAAM=",
            "AAAAAAAAAAAAAAAXYXdhcmRfYW5uaXZlcnNhcnlfYm9udXMAAAAAAQAAAAAAAAAEdXNlcgAAABMAAAABAAAD6QAAAAsAAAAD",
            "AAAAAAAAAAAAAAAQY3JlYXRlX21pbGVzdG9uZQAAAAEAAAAAAAAACW1pbGVzdG9uZQAAAAAAB9AAAAAJTWlsZXN0b25lAAAAAAAAAQAAA+kAAAPtAAAAAAAAAAM=",
            "AAAAAAAAAAAAAAASY29tcGxldGVfbWlsZXN0b25lAAAAAAACAAAAAAAAAAR1c2VyAAAAEwAAAAAAAAAMbWlsZXN0b25lX2lkAAAABAAAAAEAAAPpAAAACwAAAAM=",
            "AAAAAAAAAAAAAAAdY2hlY2tfYW5kX2NvbXBsZXRlX21pbGVzdG9uZXMAAAAAAAABAAAAAAAAAAR1c2VyAAAAEwAAAAEAAAPpAAAD6gAAAAQAAAAD",
            "AAAAAAAAAAAAAAANY3JlYXRlX3Jld2FyZAAAAAAAAAEAAAAAAAAABnJld2FyZAAAAAAH0AAAAAZSZXdhcmQAAAAAAAEAAAPpAAAD7QAAAAAAAAAD",
            "AAAAAAAAAAAAAAANcmVkZWVtX3Jld2FyZAAAAAAAAAMAAAAAAAAABHVzZXIAAAATAAAAAAAAAAlyZXdhcmRfaWQAAAAAAAAEAAAAAAAAAA9wdXJjaGFzZV9hbW91bnQAAAAD6AAAAAsAAAABAAAD6QAAAAsAAAAD",
            "AAAAAAAAAAAAAAAVZ2V0X2F2YWlsYWJsZV9yZXdhcmRzAAAAAAAAAAAAAAEAAAPpAAAD6gAAB9AAAAAGUmV3YXJkAAAAAAAD",
            "AAAAAAAAAAAAAAASY2FsY3VsYXRlX2Rpc2NvdW50AAAAAAACAAAAAAAAAAlyZXdhcmRfaWQAAAAAAAAEAAAAAAAAAA9wdXJjaGFzZV9hbW91bnQAAAAACwAAAAEAAAPpAAAACwAAAAM="]), options);
        this.options = options;
    }
    fromJSON = {
        init: (this.txFromJSON),
        update_admin: (this.txFromJSON),
        set_points_expiry: (this.txFromJSON),
        set_max_redemption_percentage: (this.txFromJSON),
        set_points_ratio: (this.txFromJSON),
        set_category_bonus: (this.txFromJSON),
        set_product_bonus: (this.txFromJSON),
        add_points: (this.txFromJSON),
        register_user: (this.txFromJSON),
        get_points_balance: (this.txFromJSON),
        get_lifetime_points: (this.txFromJSON),
        record_purchase_points: (this.txFromJSON),
        init_level_requirements: (this.txFromJSON),
        check_and_update_level: (this.txFromJSON),
        get_user_level: (this.txFromJSON),
        award_anniversary_bonus: (this.txFromJSON),
        create_milestone: (this.txFromJSON),
        complete_milestone: (this.txFromJSON),
        check_and_complete_milestones: (this.txFromJSON),
        create_reward: (this.txFromJSON),
        redeem_reward: (this.txFromJSON),
        get_available_rewards: (this.txFromJSON),
        calculate_discount: (this.txFromJSON)
    };
}
